package org.metadatacenter.submission;

import biosample.TypeAttribute;
import biosample.TypeBioSample;
import biosample.TypeBioSampleIdentifier;
import common.sp.TypeBlock;
import common.sp.TypeContactInfo;
import common.sp.TypeDescriptor;
import common.sp.TypeIdentifier;
import common.sp.TypeLocalId;
import common.sp.TypeName;
import common.sp.TypeOrganism;
import common.sp.TypeSPUID;
import generated.Submission;
import generated.TypeAccount;
import generated.TypeInlineData;
import generated.TypeOrganization;
import generated.TypeTargetDb;

import javax.xml.bind.JAXBContext;
import javax.xml.bind.JAXBElement;
import javax.xml.bind.JAXBException;
import javax.xml.bind.Marshaller;
import javax.xml.datatype.DatatypeConfigurationException;
import javax.xml.datatype.DatatypeFactory;
import javax.xml.datatype.XMLGregorianCalendar;
import javax.xml.namespace.QName;
import java.io.StringWriter;
import java.util.ArrayList;
import java.util.GregorianCalendar;
import java.util.List;
import java.util.UUID;

// TODO Very brittle. Need to do a lot more testing for empty values

/**
 * Convert a CEDAR JSON Schema-based CAIRR template instance into a BioProject/BioSample/SRA XML-based submission.
 */
public class CAIRRTemplate2SRAConverter
{
  private List<String> bioSampleIds = new ArrayList<>();
  private List<String> sraIds = new ArrayList<>();

  /**
   * The {@link CAIRRTemplate} class is generated by jsonschema2pojo from the
   * CAIRRTemplate.json JSON Schema file in the resources directory.
   *
   * @param cairrInstance A CAIRR template instance
   * @return A string containing a BioSample-conformant XML representation of the supplied CAIRR instance
   * @throws DatatypeConfigurationException If a configuration error occurs during processing
   * @throws JAXBException                  If a JAXB error occurs during processing
   */
  public String generateSRASubmissionXMLFromAIRRTemplateInstance(CAIRRTemplate cairrInstance)
    throws DatatypeConfigurationException, JAXBException
  {
    final generated.ObjectFactory submissionObjectFactory = new generated.ObjectFactory();
    final common.sp.ObjectFactory spCommonObjectFactory = new common.sp.ObjectFactory();
    final biosample.ObjectFactory bioSampleObjectFactory = new biosample.ObjectFactory();

    // This is the NCBI SRA submission. We will generate SRA XML from this submission.
    Submission submission = submissionObjectFactory.createSubmission();

    // Retrieve the BioProject from the CAIRR instance
    BioProject bioProject = cairrInstance.getBioProject();

    /*
     * Object construction for the submission <Description> section
     */
    TypeName contactName = spCommonObjectFactory.createTypeName();
    contactName.setFirst(bioProject.getFirstGivenName1().getValue());
    contactName.setLast(bioProject.getLastFamilyName1().getValue());

    TypeContactInfo contactInfo = spCommonObjectFactory.createTypeContactInfo();
    contactInfo.setEmail(bioProject.getEMail1().getValue());
    contactInfo.setName(contactName);

    TypeOrganization.Name organizationName = submissionObjectFactory.createTypeOrganizationName();
    organizationName.setValue(bioProject.getSubmittingOrganization1().getValue());

    TypeAccount contactSubmitter = submissionObjectFactory.createTypeAccount();
    contactSubmitter.setUserName(""); // TODO

    TypeOrganization contactOrganization = submissionObjectFactory.createTypeOrganization();
    contactOrganization.setType(""); // TODO
    contactOrganization.setRole(""); // TODO
    contactOrganization.setName(organizationName);
    contactOrganization.getContact().add(contactInfo);

    Submission.Description submissionDescription = submissionObjectFactory.createSubmissionDescription();
    submissionDescription.setComment(""); // TODO
    submissionDescription.setSubmitter(contactSubmitter);
    submissionDescription.getOrganization().add(contactOrganization);
    submission.setDescription(submissionDescription);

    // TODO Other BioProject fields need to be set

    // Retrieve the biosamples from the CAIRR instance
    for (BioSample1 bioSample : cairrInstance.getBioSample1()) {
      // Start <BioSample> section
      TypeBioSample ncbiBioSample = bioSampleObjectFactory.createTypeBioSample();
      ncbiBioSample.setSchemaVersion("2.0"); // XXX: Hard-coded

      // SampleId
      String bioSampleId = createNewBioSampleId();
      TypeBioSampleIdentifier.SPUID spuid = bioSampleObjectFactory.createTypeBioSampleIdentifierSPUID();
      spuid.setSpuidNamespace("CEDAR"); // TODO
      spuid.setValue(bioSampleId);

      TypeBioSampleIdentifier sampleID = bioSampleObjectFactory.createTypeBioSampleIdentifier();
      sampleID.getSPUID().add(spuid);

      ncbiBioSample.setSampleId(sampleID);

      // Descriptor
      JAXBElement descriptionElement = new JAXBElement(new QName("p"), String.class, ""); // TODO

      TypeBlock sampleDescription = spCommonObjectFactory.createTypeBlock();
      sampleDescription.getPOrUlOrOl().add(descriptionElement);

      TypeDescriptor sampleDescriptor = spCommonObjectFactory.createTypeDescriptor();
      sampleDescriptor.setTitle("Lorem ipsum dolor sit amet"); // XXX: Hard-coded due to no corresponding entry in
      // the AIRR instance
      sampleDescriptor.setDescription(sampleDescription);

      ncbiBioSample.setDescriptor(sampleDescriptor);

      // Organism
      TypeOrganism sampleOrganism = spCommonObjectFactory.createTypeOrganism();
      sampleOrganism.setOrganismName("Homo sapiens"); // TODO

      ncbiBioSample.setOrganism(sampleOrganism);

      // Package
      ncbiBioSample.setPackage("Human.1.0"); // TODO

      // Attributes
      TypeBioSample.Attributes bioSampleAttributes = bioSampleObjectFactory.createTypeBioSampleAttributes();

      // TODO This is just an example
      String value = bioSample.getRace().getValue();
      if (value != null) {
        TypeAttribute attribute = bioSampleObjectFactory.createTypeAttribute();
        attribute.setAttributeName("race");
        attribute.setValue(value);
        bioSampleAttributes.getAttribute().add(attribute);
      }

      // TODO Fill in all relevant attributes

      // Optional attributes
      for (OptionalBioSampleAttribute optionalAttribute : bioSample.getOptionalBioSampleAttribute()) {
        TypeAttribute attribute = bioSampleObjectFactory.createTypeAttribute();
        attribute.setAttributeName(optionalAttribute.getName().getValue());
        attribute.setValue(optionalAttribute.getValue().getValue());
        bioSampleAttributes.getAttribute().add(attribute);
      }

      ncbiBioSample.setAttributes(bioSampleAttributes);

      // XmlContent
      // Developement Note: The original NCBI submission doesn't includ the BioSample element, so it
      // is required to append the rule in the submission.xsd file (See submission.xsd:441)
      TypeInlineData.XmlContent xmlContent = submissionObjectFactory.createTypeInlineDataXmlContent();
      xmlContent.setBioSample(ncbiBioSample);

      // Data
      Submission.Action.AddData.Data bioSampleData = submissionObjectFactory.createSubmissionActionAddDataData();
      bioSampleData.setContentType("XML"); // TODO
      bioSampleData.setXmlContent(xmlContent);

      // Identifier
      TypeSPUID bioSampleSpuid = spCommonObjectFactory.createTypeSPUID();
      bioSampleSpuid.setSpuidNamespace("CEDAR"); // TODO
      bioSampleSpuid.setValue(bioSampleId);

      TypeIdentifier bioSampleIdentifier = spCommonObjectFactory.createTypeIdentifier();
      bioSampleIdentifier.setSPUID(bioSampleSpuid);

      // AddData
      Submission.Action.AddData bioSampleAddData = submissionObjectFactory.createSubmissionActionAddData();
      bioSampleAddData.setTargetDb(TypeTargetDb.BIO_SAMPLE);
      bioSampleAddData.setData(bioSampleData);
      bioSampleAddData.setIdentifier(bioSampleIdentifier);

      // Action
      Submission.Action bioSampleAction = submissionObjectFactory.createSubmissionAction();
      bioSampleAction.setAddData(bioSampleAddData);

      submission.getAction().add(bioSampleAction);
    }

    // Retrieve the SRAs from the CAIRR instance
    int sraIndex = 0; // to track the corresponding BioSample record for this SRA entry
    for (SequenceReadArchive1 sequenceReadArchive : cairrInstance.getSequenceReadArchive1()) {
      // AddFiles
      Submission.Action.AddFiles sraAddFiles = submissionObjectFactory.createSubmissionActionAddFiles();
      sraAddFiles.setTargetDb(TypeTargetDb.SRA);

      // TODO Process each SRA section

      // Identifier: For SRA
      TypeLocalId localSraId = spCommonObjectFactory.createTypeLocalId();
      localSraId.setValue(createNewSraId());

      TypeIdentifier sraIdentifier = spCommonObjectFactory.createTypeIdentifier();
      sraIdentifier.setLocalId(localSraId);

      sraAddFiles.setIdentifier(sraIdentifier);

      // Action
      Submission.Action sraAction = submissionObjectFactory.createSubmissionAction();
      sraAction.setAddFiles(sraAddFiles);

      submission.getAction().add(sraAction);

      sraIndex++; // increment the index counter
    }

    // Generate XML from the submission instance
    StringWriter writer = new StringWriter();
    JAXBContext ctx = JAXBContext.newInstance(Submission.class);
    Marshaller marshaller = ctx.createMarshaller();
    marshaller.setProperty(Marshaller.JAXB_FORMATTED_OUTPUT, Boolean.TRUE);
    marshaller.marshal(submission, writer);

    return writer.toString();
  }

  private XMLGregorianCalendar createXMLGregorianCalendar(String date) throws DatatypeConfigurationException
  {
    DatatypeFactory datatypeFactory = DatatypeFactory.newInstance();
    GregorianCalendar gc = new GregorianCalendar();

    return datatypeFactory.newXMLGregorianCalendar(gc);
  }

  private String createNewBioSampleId()
  {
    String id = "BioSample-" + UUID.randomUUID();
    bioSampleIds.add(id);
    return id;
  }

  private String createNewSraId()
  {
    String id = "SRA-" + UUID.randomUUID();
    sraIds.add(id);
    return id;
  }

  private String getBioSampleId(int index)
  {
    return bioSampleIds.get(index);
  }

  private String getSraId(int index)
  {
    return sraIds.get(index);
  }

}
